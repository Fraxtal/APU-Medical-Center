/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Doctor;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Kingston Teoh
 */
public class DoctorFeedback extends javax.swing.JFrame {
    private FeedbackDoctor feedbackDoctor;
    private viewFeedback viewfeedback; // Instance of viewFeedback
    private DefaultTableModel model;
    private TableRowSorter<DefaultTableModel> sorter;

    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(DoctorFeedback.class.getName());

    /**
     * Creates new form Test
     */
    public DoctorFeedback() {
        initComponents();
        setupTable();
        String filePath = "C:\\Users\\Kingston Teoh\\Documents\\NetBeansProjects\\APU-Medical-Center\\assignment\\src\\database\\feedbacks.txt";
        feedbackDoctor = new FeedbackDoctor(model, filePath);
        loadFeedbacks();
     

    }
    private void setupTable() {
        String[] cols = {"Feedback ID", "Appointment ID", "Doctor ID", "Doctor Name", "Customer ID", "Customer Name", "Feedback"};
        int[] w = {120, 100, 120, 150, 150, 100, 150};

        model = new DefaultTableModel(cols, 0) { // Use the class-level model variable
            public boolean isCellEditable(int r, int c) {
                return c != 0; // Make cells editable except the first column
            }
        };
    
        jTable2.setModel(model); // Set the model for the table
        jTable2.setAutoCreateRowSorter(true);
        viewfeedback = new viewFeedback(model);
        sorter = viewfeedback.getSorter();
        jTable2.setRowSorter(sorter);
    
        TableColumnModel cm = jTable2.getColumnModel();
        for (int i = 0; i < w.length; i++) {
            cm.getColumn(i).setPreferredWidth(w[i]);
        }
    
        DefaultTableCellRenderer c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        cm.getColumn(6).setCellRenderer(c);
    
        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);

    }
    private void saveFeedbacks(String filePath) {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(filePath))) {
            for (int i = 0; i < model.getRowCount(); i++) {
                String feedbackId = model.getValueAt(i, 0).toString();
                String appointmentId = model.getValueAt(i, 1).toString();
                String doctorId = model.getValueAt(i, 2).toString();
                String doctorName = model.getValueAt(i, 3).toString();
                String customerId = model.getValueAt(i, 4).toString();
                String customerName = model.getValueAt(i, 5).toString();
                String feedback = model.getValueAt(i, 6).toString();
            
                String row = feedbackId + "," + appointmentId + "," + doctorId + "," +
                            doctorName + "," + customerId + "," + customerName + "," +
                            feedback;

                bw.write(row);
                bw.newLine();
            }
            JOptionPane.showMessageDialog(this, "Feedbacks saved successfully.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving feedbacks: " + e.getMessage());
        }
    }
    
    
    private void loadFeedbacks()
    {
        String filePath ="C:\\Users\\Kingston Teoh\\Documents\\NetBeansProjects\\APU-Medical-Center\\assignment\\src\\database\\feedbacks.txt";
        viewfeedback.loadFeedbacks(filePath);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Feedback ID", "Appointment ID", "Doctor ID", "Doctor Name", "Customer ID", "Customer Name", "Feedback"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel2.setText("Feedback:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jButton3.setText("back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Edit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton3)))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(39, 39, 39)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton1))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setVisible(false); // Close current frame
        DoctorMenu obj = new DoctorMenu();
        obj.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int row = jTable2.getSelectedRow(); // Get selected row
        String feedback = jTextArea1.getText(); // Get feedback from JTextArea

        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to edit feedback.");
        } else if (feedback.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter feedback to update.");
        } else {
            System.out.println("Selected Row: " + row);
            System.out.println("Feedback: " + feedback);
        
            feedbackDoctor.editFeedback(row, feedback); // Call method to update feedback
        
            // Optionally refresh the table
            jTable2.revalidate();
            jTable2.repaint();
        
            jTextArea1.setText(""); // Clear the text area
            JOptionPane.showMessageDialog(this, "Feedback updated successfully.");
        }     
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String filePath = "C:\\Users\\Kingston Teoh\\Documents\\NetBeansProjects\\APU-Medical-Center\\assignment\\src\\database\\feedbacks.txt";
        saveFeedbacks(filePath);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new DoctorFeedback().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
