/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Doctor.view;

import Doctor.controller.FeedbackDoctor;
import Doctor.controller.TableSearchHandler;
import Doctor.view.DoctorMenu;
import Doctor.model.viewFeedback;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Kingston Teoh
 */
public class DoctorFeedback extends javax.swing.JFrame {
    private FeedbackDoctor feedbackDoctor;
    private viewFeedback viewfeedback; // Instance of viewFeedback
    private DefaultTableModel model;
    private TableRowSorter<DefaultTableModel> sorter;
    private TableSearchHandler searchHandler;

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(DoctorFeedback.class.getName());

    public DoctorFeedback() {
        initComponents();
        setupTable();
        String filePath = "src\\database\\feedbacks.txt";
        feedbackDoctor = new FeedbackDoctor(model, filePath);
        loadFeedbacks();
        searchHandler = new TableSearchHandler(FeedbackTable);
    }
    
    private void setupTable() {
        String[] cols = {"Feedback ID", "Appointment ID", "Doctor ID", "Doctor Name", "Customer ID", "Customer Name", "Feedback"};
        int[] w = {120, 100, 120, 150, 150, 100, 150};

        model = new DefaultTableModel(cols, 0) {
            public boolean isCellEditable(int r, int c) {
                return c == 6; // Make only the Feedback column editable
            }
        };
    
        FeedbackTable.setModel(model);
        FeedbackTable.setAutoCreateRowSorter(true);
        
        // Initialize viewfeedback after model is created
        viewfeedback = new viewFeedback(model);
        sorter = viewfeedback.getSorter();
        FeedbackTable.setRowSorter(sorter);
    
        TableColumnModel cm = FeedbackTable.getColumnModel();
        for (int i = 0; i < w.length; i++) {
            cm.getColumn(i).setPreferredWidth(w[i]);
        }
    
        DefaultTableCellRenderer c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        // Center align multiple columns if needed
        for (int i = 0; i < 6; i++) { // Center first 6 columns
            cm.getColumn(i).setCellRenderer(c);
        }
    
        FeedbackTable.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
    }
    
    private void loadFeedbacks() {
        String filePath = "src\\database\\appointments.txt"; // Load from appointments.txt
        viewfeedback.loadScheduledAppointments(filePath);
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        FeedbackTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Feedbacktxt = new javax.swing.JTextArea();
        backbtn = new javax.swing.JButton();
        Editbtn = new javax.swing.JButton();
        Savebtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        FeedbackSearchtxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        FeedbackTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Feedback ID", "Appointment ID", "Doctor ID", "Doctor Name", "Customer ID", "Customer Name", "Feedback"
            }
        ));
        jScrollPane2.setViewportView(FeedbackTable);

        jLabel2.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jLabel2.setText("Feedback:");

        Feedbacktxt.setColumns(20);
        Feedbacktxt.setRows(5);
        jScrollPane3.setViewportView(Feedbacktxt);

        backbtn.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        backbtn.setText("back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        Editbtn.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        Editbtn.setText("Edit");
        Editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditbtnActionPerformed(evt);
            }
        });

        Savebtn.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        Savebtn.setText("Save");
        Savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavebtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel1.setText("Feedback");

        FeedbackSearchtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FeedbackSearchtxtActionPerformed(evt);
            }
        });
        FeedbackSearchtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                FeedbackSearchtxtKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel3.setText("Search:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(backbtn)))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Editbtn)
                                .addGap(39, 39, 39)
                                .addComponent(Savebtn))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel3)
                        .addGap(51, 51, 51)
                        .addComponent(FeedbackSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addComponent(jLabel1)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FeedbackSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backbtn)
                    .addComponent(Editbtn)
                    .addComponent(Savebtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        this.setVisible(false); // Close current frame
        DoctorMenu obj = new DoctorMenu();
        obj.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_backbtnActionPerformed

    private void EditbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditbtnActionPerformed
        int row = FeedbackTable.getSelectedRow(); // Get selected row
        String feedback = Feedbacktxt.getText(); // Get feedback from JTextArea

        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to edit feedback.");
        } else if (feedback.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter feedback to update.");
        } else {
            System.out.println("Selected Row: " + row);
            System.out.println("Feedback: " + feedback);
        
            feedbackDoctor.editFeedback(row, feedback); // Call method to update feedback
        
            // Optionally refresh the table
            FeedbackTable.revalidate();
            FeedbackTable.repaint();
        
            Feedbacktxt.setText(""); // Clear the text area
            JOptionPane.showMessageDialog(this, "Feedback updated successfully.");
        }     
    }//GEN-LAST:event_EditbtnActionPerformed

    private void SavebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavebtnActionPerformed
        feedbackDoctor.saveFeedbackToFile();        // TODO add your handling code here:
    }//GEN-LAST:event_SavebtnActionPerformed

    private void FeedbackSearchtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FeedbackSearchtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FeedbackSearchtxtActionPerformed

    private void FeedbackSearchtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FeedbackSearchtxtKeyReleased
        String query = FeedbackSearchtxt.getText();
        searchHandler.filterTable(query);        // TODO add your handling code here:
    }//GEN-LAST:event_FeedbackSearchtxtKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new DoctorFeedback().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Editbtn;
    private javax.swing.JTextField FeedbackSearchtxt;
    private javax.swing.JTable FeedbackTable;
    private javax.swing.JTextArea Feedbacktxt;
    private javax.swing.JButton Savebtn;
    private javax.swing.JButton backbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
