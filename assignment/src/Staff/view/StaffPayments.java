/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Staff.view;

import Doctor.controller.TableSearchHandler;
import Staff.controller.StaffController;
import Staff.service.ManageCustomerAccount;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;


public class StaffPayments extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(StaffPayments.class.getName());
    StaffController controller = new StaffController();
    TableSearchHandler tbs;
    
    public StaffPayments() {
        initComponents();
        tblInvoice.setModel(controller.getInvoiceTable());
        tbs = new TableSearchHandler(tblInvoice);
        txtInvoiceId.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPayment = new javax.swing.JPanel();
        txtInvoiceId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbPayment = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInvoice = new javax.swing.JTable();
        lblSubtotal = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnPayNFInalize = new javax.swing.JButton();
        btnReceipt = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInvoiceDetails = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtReturn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtInvoiceSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtInvoiceId.setEnabled(false);

        jLabel1.setText("Invoice ID");

        jLabel2.setText("Payment Method");

        cmbPayment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Credit" }));

        tblInvoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblInvoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInvoiceMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblInvoice);

        lblSubtotal.setText("RM xx");
        lblSubtotal.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblSubtotal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnPayNFInalize.setText("Pay and Finalize");
        btnPayNFInalize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayNFInalizeActionPerformed(evt);
            }
        });

        btnReceipt.setText("Print Receipt");
        btnReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReceiptActionPerformed(evt);
            }
        });

        tblInvoiceDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice Details ID", "Item Name", "Quantity", "Price Per Item", "Total Price", "Invoice ID", "Appointment ID"
            }
        ));
        tblInvoiceDetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblInvoiceDetails);

        jLabel5.setText("Invoice");

        jLabel6.setText("Invoice Details - Price Breakdown");

        txtReturn.setText("Return");
        txtReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReturnActionPerformed(evt);
            }
        });

        jLabel3.setText("Total Price");

        txtInvoiceSearch.setForeground(new java.awt.Color(204, 204, 204));
        txtInvoiceSearch.setText("Search...");
        txtInvoiceSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtInvoiceSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtInvoiceSearchFocusLost(evt);
            }
        });
        txtInvoiceSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtInvoiceSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelPaymentLayout = new javax.swing.GroupLayout(jPanelPayment);
        jPanelPayment.setLayout(jPanelPaymentLayout);
        jPanelPaymentLayout.setHorizontalGroup(
            jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPaymentLayout.createSequentialGroup()
                .addGroup(jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPaymentLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblSubtotal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPayNFInalize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnReceipt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPaymentLayout.createSequentialGroup()
                                    .addGroup(jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel2))
                                    .addGap(53, 53, 53)
                                    .addGroup(jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtInvoiceId, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                                        .addComponent(cmbPayment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jLabel3))
                        .addGap(89, 89, 89)
                        .addGroup(jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelPaymentLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtInvoiceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanelPaymentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtReturn)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanelPaymentLayout.setVerticalGroup(
            jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPaymentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtReturn)
                .addGap(37, 37, 37)
                .addGroup(jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelPaymentLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4)
                        .addGap(104, 104, 104)
                        .addGroup(jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtInvoiceId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmbPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPayNFInalize, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))
                    .addGroup(jPanelPaymentLayout.createSequentialGroup()
                        .addGroup(jPanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtInvoiceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPayment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPayment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReturnActionPerformed
        StaffDashboard sd = new StaffDashboard();
        sd.setVisible(true);
        dispose();
    }//GEN-LAST:event_txtReturnActionPerformed

    private void tblInvoiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInvoiceMouseClicked
//        int index = tblInvoice.getSelectedRow();
//        TableModel invoiceModel = tblInvoice.getModel();
//        if (index != -1){
//            String invoiceId = invoiceModel.getValueAt(index, 0).toString();
//            
//            txtInvoiceId.setText(invoiceId);
//            lblSubtotal.setText("RM" + invoiceModel.getValueAt(index, 1).toString());
//            cmbPayment.setSelectedItem(invoiceModel.getValueAt(index, 2).toString());
//            
//            tblInvoiceDetails.setModel(controller.getSpecificInvoiceDetailTable(invoiceId));
//        }

        int baseIndex = tblInvoice.getSelectedRow();
        if (baseIndex != -1) {
            int displayIndex = tblInvoice.convertRowIndexToModel(baseIndex); 

            TableModel invoiceModel = tblInvoice.getModel();
            String invoiceId = invoiceModel.getValueAt(displayIndex, 0).toString();

            txtInvoiceId.setText(invoiceId);
            lblSubtotal.setText("RM" + invoiceModel.getValueAt(displayIndex, 1).toString());
            cmbPayment.setSelectedItem(invoiceModel.getValueAt(displayIndex, 2).toString());

            tblInvoiceDetails.setModel(controller.getSpecificInvoiceDetailTable(invoiceId));
        }
    }//GEN-LAST:event_tblInvoiceMouseClicked

    private void btnPayNFInalizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayNFInalizeActionPerformed
        int currentRow = tblInvoice.getSelectedRow();
        
        if (currentRow == -1){
            JOptionPane.showMessageDialog(this, "Please select an invoice to update.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String invoiceID = txtInvoiceId.getText();
        String currentPaymentMethod = tblInvoice.getValueAt(currentRow, 2).toString();
        String newPaymentMethod = cmbPayment.getSelectedItem().toString();
        String subtotal = tblInvoice.getValueAt(currentRow, 1).toString();
        String appointmentId = tblInvoice.getValueAt(currentRow, 3).toString();
        String customerName = controller.validateAppIdtoCustomerName(appointmentId);
        
        if (!currentPaymentMethod.isEmpty()){
            int option = JOptionPane.showConfirmDialog(this, "Invoice has already been paid for. \nUpdate Payment Method?", "Confirmation",JOptionPane.YES_NO_OPTION);
            if (option != JOptionPane.YES_OPTION) {
                return;
            }
        }

        int option = JOptionPane.showConfirmDialog(this, "Confirm Payment?"  + "\n\nCustomer: " + customerName + "\nAppointment ID: " + 
                appointmentId + "\nInvoice ID: " + invoiceID + "\nPayment Method: " + newPaymentMethod + "\nTotal Price: " + subtotal, 
                    "Confirmation",JOptionPane.YES_NO_OPTION);

        if (option != JOptionPane.YES_OPTION) {
            return;
        }
        
        int success = controller.validateInvoiceUpdate(invoiceID, newPaymentMethod);
        
        switch (success){
            case 0:
                JOptionPane.showMessageDialog(this, "Payment successful.", "Info", JOptionPane.INFORMATION_MESSAGE);
                break;
            case 1:
                JOptionPane.showMessageDialog(this, "Please fill in all the fields.", "Info", JOptionPane.INFORMATION_MESSAGE);
                break;
            case 2:
                JOptionPane.showMessageDialog(this, "Invalid Payment Method.", "Error", JOptionPane.ERROR_MESSAGE);
                break;
            case 3:
                JOptionPane.showMessageDialog(this, "Error occured while updating invoices.", "Error", JOptionPane.ERROR_MESSAGE);
                break;
            default:
                JOptionPane.showMessageDialog(this, "ERROR", "Error", JOptionPane.ERROR_MESSAGE);
                break;
        }
        tblInvoice.setModel(controller.getInvoiceTable());
    }//GEN-LAST:event_btnPayNFInalizeActionPerformed

    private void btnReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReceiptActionPerformed
        int currentRow = tblInvoice.getSelectedRow();
        
        if (currentRow == -1){
            JOptionPane.showMessageDialog(this, "Select an invoice to print.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String invoiceId = txtInvoiceId.getText();
        String appointmentId = tblInvoice.getValueAt(currentRow, 3).toString();
        String paymentMethod = tblInvoice.getValueAt(currentRow, 2).toString();
        
//        if (!paymentMethod.equalsIgnoreCase("Cash") || !paymentMethod.equalsIgnoreCase("Credit")){
//            JOptionPane.showMessageDialog(this, "Invoice still unpaid", "Error", JOptionPane.ERROR_MESSAGE);
//        }
        
//        int option = JOptionPane.showConfirmDialog(this, "Print Receipt?", "Confirmation",JOptionPane.YES_NO_OPTION);

        int success = controller.validateGenerateReceipt(appointmentId, invoiceId, paymentMethod);
        
        switch (success){
            case 0:
                JOptionPane.showMessageDialog(this, "Receipt successfully generated.", "Info", JOptionPane.INFORMATION_MESSAGE);
                break;
            case 1:
                JOptionPane.showMessageDialog(this, "Invoice has not been paid.", "Error", JOptionPane.ERROR_MESSAGE);
                break;
            case 2:
                JOptionPane.showMessageDialog(this, "Customer not found.", "Error", JOptionPane.ERROR_MESSAGE);
                break;
            case 3:
                JOptionPane.showMessageDialog(this, "Error occured while generating receipt.", "Error", JOptionPane.ERROR_MESSAGE);
                break;
        }

    }//GEN-LAST:event_btnReceiptActionPerformed

    private void txtInvoiceSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInvoiceSearchKeyReleased
        String query = txtInvoiceSearch.getText();
        tbs.filterTable(query);
    }//GEN-LAST:event_txtInvoiceSearchKeyReleased

    private void txtInvoiceSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInvoiceSearchFocusGained
        if(txtInvoiceSearch.getText().equals("Search...")){
            txtInvoiceSearch.setText("");
            txtInvoiceSearch.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtInvoiceSearchFocusGained

    private void txtInvoiceSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInvoiceSearchFocusLost
        if(txtInvoiceSearch.getText().equals("")){
            txtInvoiceSearch.setText("Search...");
            txtInvoiceSearch.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_txtInvoiceSearchFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new StaffPayments().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPayNFInalize;
    private javax.swing.JButton btnReceipt;
    private javax.swing.JComboBox<String> cmbPayment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanelPayment;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSubtotal;
    private javax.swing.JTable tblInvoice;
    private javax.swing.JTable tblInvoiceDetails;
    private javax.swing.JTextField txtInvoiceId;
    private javax.swing.JTextField txtInvoiceSearch;
    private javax.swing.JButton txtReturn;
    // End of variables declaration//GEN-END:variables
}
